//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.09.22 at 04:04:36 PM CEST 
//


package org.gpx2web.binding.kml.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.HexBinaryAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.gpx2web.binding.kml.AbstractObjectType;
import org.gpx2web.binding.kml.AbstractOverlayType;
import org.gpx2web.binding.kml.LinkType;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AbstractOverlayType", propOrder = {
    "color",
    "drawOrder",
    "icon",
    "abstractOverlaySimpleExtensionGroups",
    "abstractOverlayObjectExtensionGroups"
})
@XmlSeeAlso({
    PhotoOverlayTypeImpl.class,
    ScreenOverlayTypeImpl.class,
    GroundOverlayTypeImpl.class
})
public abstract class AbstractOverlayTypeImpl
    extends AbstractFeatureTypeImpl
    implements AbstractOverlayType
{

    @XmlElement(type = String.class, defaultValue = "ffffffff")
    @XmlJavaTypeAdapter(HexBinaryAdapter.class)
    protected byte[] color;
    @XmlElement(defaultValue = "0")
    protected Integer drawOrder;
    @XmlElement(name = "Icon", type = LinkTypeImpl.class)
    protected LinkTypeImpl icon;
    @XmlElement(name = "AbstractOverlaySimpleExtensionGroup")
    @XmlSchemaType(name = "anySimpleType")
    protected List<Object> abstractOverlaySimpleExtensionGroups;
    @XmlElement(name = "AbstractOverlayObjectExtensionGroup", type = AbstractObjectTypeImpl.class)
    protected List<AbstractObjectType> abstractOverlayObjectExtensionGroups;

    public byte[] getColor() {
        return color;
    }

    public void setColor(byte[] value) {
        this.color = ((byte[]) value);
    }

    public Integer getDrawOrder() {
        return drawOrder;
    }

    public void setDrawOrder(Integer value) {
        this.drawOrder = value;
    }

    public LinkType getIcon() {
        return icon;
    }

    public void setIcon(LinkType value) {
        this.icon = ((LinkTypeImpl) value);
    }

    public List<Object> getAbstractOverlaySimpleExtensionGroups() {
        if (abstractOverlaySimpleExtensionGroups == null) {
            abstractOverlaySimpleExtensionGroups = new ArrayList<Object>();
        }
        return this.abstractOverlaySimpleExtensionGroups;
    }

    public List<AbstractObjectType> getAbstractOverlayObjectExtensionGroups() {
        if (abstractOverlayObjectExtensionGroups == null) {
            abstractOverlayObjectExtensionGroups = new ArrayList<AbstractObjectType>();
        }
        return this.abstractOverlayObjectExtensionGroups;
    }

}
