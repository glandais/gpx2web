//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.09.22 at 04:04:36 PM CEST 
//


package org.gpx2web.binding.kml.impl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlAnyElement;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import javax.xml.namespace.QName;
import org.gpx2web.binding.kml.AddressLine;
import org.gpx2web.binding.kml.AdministrativeArea;
import org.gpx2web.binding.kml.Locality;
import org.gpx2web.binding.kml.PostOffice;
import org.gpx2web.binding.kml.PostalCode;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "addressLines",
    "administrativeAreaNames",
    "subAdministrativeArea",
    "postalCode",
    "postOffice",
    "locality",
    "anies"
})
@XmlRootElement(name = "AdministrativeArea", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0")
public class AdministrativeAreaImpl
    implements AdministrativeArea
{

    @XmlElement(name = "AddressLine", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = AddressLineImpl.class)
    protected List<AddressLine> addressLines;
    @XmlElement(name = "AdministrativeAreaName", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = AdministrativeAreaImpl.AdministrativeAreaNameImpl.class)
    protected List<AdministrativeArea.AdministrativeAreaName> administrativeAreaNames;
    @XmlElement(name = "SubAdministrativeArea", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = AdministrativeAreaImpl.SubAdministrativeAreaImpl.class)
    protected AdministrativeAreaImpl.SubAdministrativeAreaImpl subAdministrativeArea;
    @XmlElement(name = "PostalCode", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = PostalCodeImpl.class)
    protected PostalCodeImpl postalCode;
    @XmlElement(name = "PostOffice", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = PostOfficeImpl.class)
    protected PostOfficeImpl postOffice;
    @XmlElement(name = "Locality", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = LocalityImpl.class)
    protected LocalityImpl locality;
    @XmlAnyElement(lax = true)
    protected List<Object> anies;
    @XmlAttribute(name = "Type")
    @XmlSchemaType(name = "anySimpleType")
    protected String type;
    @XmlAttribute(name = "UsageType")
    @XmlSchemaType(name = "anySimpleType")
    protected String usageType;
    @XmlAttribute(name = "Indicator")
    @XmlSchemaType(name = "anySimpleType")
    protected String indicator;
    @XmlAnyAttribute
    private Map<QName, String> otherAttributes = new HashMap<QName, String>();

    public List<AddressLine> getAddressLines() {
        if (addressLines == null) {
            addressLines = new ArrayList<AddressLine>();
        }
        return this.addressLines;
    }

    public List<AdministrativeArea.AdministrativeAreaName> getAdministrativeAreaNames() {
        if (administrativeAreaNames == null) {
            administrativeAreaNames = new ArrayList<AdministrativeArea.AdministrativeAreaName>();
        }
        return this.administrativeAreaNames;
    }

    public AdministrativeArea.SubAdministrativeArea getSubAdministrativeArea() {
        return subAdministrativeArea;
    }

    public void setSubAdministrativeArea(AdministrativeArea.SubAdministrativeArea value) {
        this.subAdministrativeArea = ((AdministrativeAreaImpl.SubAdministrativeAreaImpl) value);
    }

    public PostalCode getPostalCode() {
        return postalCode;
    }

    public void setPostalCode(PostalCode value) {
        this.postalCode = ((PostalCodeImpl) value);
    }

    public PostOffice getPostOffice() {
        return postOffice;
    }

    public void setPostOffice(PostOffice value) {
        this.postOffice = ((PostOfficeImpl) value);
    }

    public Locality getLocality() {
        return locality;
    }

    public void setLocality(Locality value) {
        this.locality = ((LocalityImpl) value);
    }

    public List<Object> getAnies() {
        if (anies == null) {
            anies = new ArrayList<Object>();
        }
        return this.anies;
    }

    public String getType() {
        return type;
    }

    public void setType(String value) {
        this.type = value;
    }

    public String getUsageType() {
        return usageType;
    }

    public void setUsageType(String value) {
        this.usageType = value;
    }

    public String getIndicator() {
        return indicator;
    }

    public void setIndicator(String value) {
        this.indicator = value;
    }

    /**
     * Gets a map that contains attributes that aren't bound to any typed property on this class.
     * 
     * <p>
     * the map is keyed by the name of the attribute and 
     * the value is the string value of the attribute.
     * 
     * the map returned by this method is live, and you can add new attribute
     * by updating the map directly. Because of this design, there's no setter.
     * 
     * 
     * @return
     *     always non-null
     */
    public Map<QName, String> getOtherAttributes() {
        return otherAttributes;
    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "content"
    })
    public static class AdministrativeAreaNameImpl
        implements AdministrativeArea.AdministrativeAreaName
    {

        @XmlValue
        protected String content;
        @XmlAttribute(name = "Type")
        @XmlSchemaType(name = "anySimpleType")
        protected String type;
        @XmlAttribute(name = "Code")
        @XmlSchemaType(name = "anySimpleType")
        protected String code;
        @XmlAnyAttribute
        private Map<QName, String> otherAttributes = new HashMap<QName, String>();

        public String getContent() {
            return content;
        }

        public void setContent(String value) {
            this.content = value;
        }

        public String getType() {
            return type;
        }

        public void setType(String value) {
            this.type = value;
        }

        public String getCode() {
            return code;
        }

        public void setCode(String value) {
            this.code = value;
        }

        /**
         * Gets a map that contains attributes that aren't bound to any typed property on this class.
         * 
         * <p>
         * the map is keyed by the name of the attribute and 
         * the value is the string value of the attribute.
         * 
         * the map returned by this method is live, and you can add new attribute
         * by updating the map directly. Because of this design, there's no setter.
         * 
         * 
         * @return
         *     always non-null
         */
        public Map<QName, String> getOtherAttributes() {
            return otherAttributes;
        }

    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "addressLines",
        "subAdministrativeAreaNames",
        "postalCode",
        "postOffice",
        "locality",
        "anies"
    })
    public static class SubAdministrativeAreaImpl
        implements AdministrativeArea.SubAdministrativeArea
    {

        @XmlElement(name = "AddressLine", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = AddressLineImpl.class)
        protected List<AddressLine> addressLines;
        @XmlElement(name = "SubAdministrativeAreaName", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = AdministrativeAreaImpl.SubAdministrativeAreaImpl.SubAdministrativeAreaNameImpl.class)
        protected List<AdministrativeArea.SubAdministrativeArea.SubAdministrativeAreaName> subAdministrativeAreaNames;
        @XmlElement(name = "PostalCode", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = PostalCodeImpl.class)
        protected PostalCodeImpl postalCode;
        @XmlElement(name = "PostOffice", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = PostOfficeImpl.class)
        protected PostOfficeImpl postOffice;
        @XmlElement(name = "Locality", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = LocalityImpl.class)
        protected LocalityImpl locality;
        @XmlAnyElement(lax = true)
        protected List<Object> anies;
        @XmlAttribute(name = "Type")
        @XmlSchemaType(name = "anySimpleType")
        protected String type;
        @XmlAttribute(name = "UsageType")
        @XmlSchemaType(name = "anySimpleType")
        protected String usageType;
        @XmlAttribute(name = "Indicator")
        @XmlSchemaType(name = "anySimpleType")
        protected String indicator;
        @XmlAnyAttribute
        private Map<QName, String> otherAttributes = new HashMap<QName, String>();

        public List<AddressLine> getAddressLines() {
            if (addressLines == null) {
                addressLines = new ArrayList<AddressLine>();
            }
            return this.addressLines;
        }

        public List<AdministrativeArea.SubAdministrativeArea.SubAdministrativeAreaName> getSubAdministrativeAreaNames() {
            if (subAdministrativeAreaNames == null) {
                subAdministrativeAreaNames = new ArrayList<AdministrativeArea.SubAdministrativeArea.SubAdministrativeAreaName>();
            }
            return this.subAdministrativeAreaNames;
        }

        public PostalCode getPostalCode() {
            return postalCode;
        }

        public void setPostalCode(PostalCode value) {
            this.postalCode = ((PostalCodeImpl) value);
        }

        public PostOffice getPostOffice() {
            return postOffice;
        }

        public void setPostOffice(PostOffice value) {
            this.postOffice = ((PostOfficeImpl) value);
        }

        public Locality getLocality() {
            return locality;
        }

        public void setLocality(Locality value) {
            this.locality = ((LocalityImpl) value);
        }

        public List<Object> getAnies() {
            if (anies == null) {
                anies = new ArrayList<Object>();
            }
            return this.anies;
        }

        public String getType() {
            return type;
        }

        public void setType(String value) {
            this.type = value;
        }

        public String getUsageType() {
            return usageType;
        }

        public void setUsageType(String value) {
            this.usageType = value;
        }

        public String getIndicator() {
            return indicator;
        }

        public void setIndicator(String value) {
            this.indicator = value;
        }

        /**
         * Gets a map that contains attributes that aren't bound to any typed property on this class.
         * 
         * <p>
         * the map is keyed by the name of the attribute and 
         * the value is the string value of the attribute.
         * 
         * the map returned by this method is live, and you can add new attribute
         * by updating the map directly. Because of this design, there's no setter.
         * 
         * 
         * @return
         *     always non-null
         */
        public Map<QName, String> getOtherAttributes() {
            return otherAttributes;
        }

        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "content"
        })
        public static class SubAdministrativeAreaNameImpl
            implements AdministrativeArea.SubAdministrativeArea.SubAdministrativeAreaName
        {

            @XmlValue
            protected String content;
            @XmlAttribute(name = "Type")
            @XmlSchemaType(name = "anySimpleType")
            protected String type;
            @XmlAttribute(name = "Code")
            @XmlSchemaType(name = "anySimpleType")
            protected String code;
            @XmlAnyAttribute
            private Map<QName, String> otherAttributes = new HashMap<QName, String>();

            public String getContent() {
                return content;
            }

            public void setContent(String value) {
                this.content = value;
            }

            public String getType() {
                return type;
            }

            public void setType(String value) {
                this.type = value;
            }

            public String getCode() {
                return code;
            }

            public void setCode(String value) {
                this.code = value;
            }

            /**
             * Gets a map that contains attributes that aren't bound to any typed property on this class.
             * 
             * <p>
             * the map is keyed by the name of the attribute and 
             * the value is the string value of the attribute.
             * 
             * the map returned by this method is live, and you can add new attribute
             * by updating the map directly. Because of this design, there's no setter.
             * 
             * 
             * @return
             *     always non-null
             */
            public Map<QName, String> getOtherAttributes() {
                return otherAttributes;
            }

        }

    }

}
