//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.09.22 at 04:04:36 PM CEST 
//


package org.gpx2web.binding.kml.impl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlAnyElement;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import javax.xml.namespace.QName;
import org.gpx2web.binding.kml.AddressLine;
import org.gpx2web.binding.kml.FirmType;
import org.gpx2web.binding.kml.PostBox;
import org.gpx2web.binding.kml.PostalCode;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "addressLines",
    "postBoxNumber",
    "postBoxNumberPrefix",
    "postBoxNumberSuffix",
    "postBoxNumberExtension",
    "firm",
    "postalCode",
    "anies"
})
@XmlRootElement(name = "PostBox", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0")
public class PostBoxImpl
    implements PostBox
{

    @XmlElement(name = "AddressLine", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = AddressLineImpl.class)
    protected List<AddressLine> addressLines;
    @XmlElement(name = "PostBoxNumber", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", required = true, type = PostBoxImpl.PostBoxNumberImpl.class)
    protected PostBoxImpl.PostBoxNumberImpl postBoxNumber;
    @XmlElement(name = "PostBoxNumberPrefix", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = PostBoxImpl.PostBoxNumberPrefixImpl.class)
    protected PostBoxImpl.PostBoxNumberPrefixImpl postBoxNumberPrefix;
    @XmlElement(name = "PostBoxNumberSuffix", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = PostBoxImpl.PostBoxNumberSuffixImpl.class)
    protected PostBoxImpl.PostBoxNumberSuffixImpl postBoxNumberSuffix;
    @XmlElement(name = "PostBoxNumberExtension", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = PostBoxImpl.PostBoxNumberExtensionImpl.class)
    protected PostBoxImpl.PostBoxNumberExtensionImpl postBoxNumberExtension;
    @XmlElement(name = "Firm", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = FirmTypeImpl.class)
    protected FirmTypeImpl firm;
    @XmlElement(name = "PostalCode", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = PostalCodeImpl.class)
    protected PostalCodeImpl postalCode;
    @XmlAnyElement(lax = true)
    protected List<Object> anies;
    @XmlAttribute(name = "Type")
    @XmlSchemaType(name = "anySimpleType")
    protected String type;
    @XmlAttribute(name = "Indicator")
    @XmlSchemaType(name = "anySimpleType")
    protected String indicator;
    @XmlAnyAttribute
    private Map<QName, String> otherAttributes = new HashMap<QName, String>();

    public List<AddressLine> getAddressLines() {
        if (addressLines == null) {
            addressLines = new ArrayList<AddressLine>();
        }
        return this.addressLines;
    }

    public PostBox.PostBoxNumber getPostBoxNumber() {
        return postBoxNumber;
    }

    public void setPostBoxNumber(PostBox.PostBoxNumber value) {
        this.postBoxNumber = ((PostBoxImpl.PostBoxNumberImpl) value);
    }

    public PostBox.PostBoxNumberPrefix getPostBoxNumberPrefix() {
        return postBoxNumberPrefix;
    }

    public void setPostBoxNumberPrefix(PostBox.PostBoxNumberPrefix value) {
        this.postBoxNumberPrefix = ((PostBoxImpl.PostBoxNumberPrefixImpl) value);
    }

    public PostBox.PostBoxNumberSuffix getPostBoxNumberSuffix() {
        return postBoxNumberSuffix;
    }

    public void setPostBoxNumberSuffix(PostBox.PostBoxNumberSuffix value) {
        this.postBoxNumberSuffix = ((PostBoxImpl.PostBoxNumberSuffixImpl) value);
    }

    public PostBox.PostBoxNumberExtension getPostBoxNumberExtension() {
        return postBoxNumberExtension;
    }

    public void setPostBoxNumberExtension(PostBox.PostBoxNumberExtension value) {
        this.postBoxNumberExtension = ((PostBoxImpl.PostBoxNumberExtensionImpl) value);
    }

    public FirmType getFirm() {
        return firm;
    }

    public void setFirm(FirmType value) {
        this.firm = ((FirmTypeImpl) value);
    }

    public PostalCode getPostalCode() {
        return postalCode;
    }

    public void setPostalCode(PostalCode value) {
        this.postalCode = ((PostalCodeImpl) value);
    }

    public List<Object> getAnies() {
        if (anies == null) {
            anies = new ArrayList<Object>();
        }
        return this.anies;
    }

    public String getType() {
        return type;
    }

    public void setType(String value) {
        this.type = value;
    }

    public String getIndicator() {
        return indicator;
    }

    public void setIndicator(String value) {
        this.indicator = value;
    }

    /**
     * Gets a map that contains attributes that aren't bound to any typed property on this class.
     * 
     * <p>
     * the map is keyed by the name of the attribute and 
     * the value is the string value of the attribute.
     * 
     * the map returned by this method is live, and you can add new attribute
     * by updating the map directly. Because of this design, there's no setter.
     * 
     * 
     * @return
     *     always non-null
     */
    public Map<QName, String> getOtherAttributes() {
        return otherAttributes;
    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "content"
    })
    public static class PostBoxNumberExtensionImpl
        implements PostBox.PostBoxNumberExtension
    {

        @XmlValue
        protected String content;
        @XmlAttribute(name = "NumberExtensionSeparator")
        @XmlSchemaType(name = "anySimpleType")
        protected String numberExtensionSeparator;
        @XmlAnyAttribute
        private Map<QName, String> otherAttributes = new HashMap<QName, String>();

        public String getContent() {
            return content;
        }

        public void setContent(String value) {
            this.content = value;
        }

        public String getNumberExtensionSeparator() {
            return numberExtensionSeparator;
        }

        public void setNumberExtensionSeparator(String value) {
            this.numberExtensionSeparator = value;
        }

        /**
         * Gets a map that contains attributes that aren't bound to any typed property on this class.
         * 
         * <p>
         * the map is keyed by the name of the attribute and 
         * the value is the string value of the attribute.
         * 
         * the map returned by this method is live, and you can add new attribute
         * by updating the map directly. Because of this design, there's no setter.
         * 
         * 
         * @return
         *     always non-null
         */
        public Map<QName, String> getOtherAttributes() {
            return otherAttributes;
        }

    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "content"
    })
    public static class PostBoxNumberImpl
        implements PostBox.PostBoxNumber
    {

        @XmlValue
        protected String content;
        @XmlAttribute(name = "Code")
        @XmlSchemaType(name = "anySimpleType")
        protected String code;
        @XmlAnyAttribute
        private Map<QName, String> otherAttributes = new HashMap<QName, String>();

        public String getContent() {
            return content;
        }

        public void setContent(String value) {
            this.content = value;
        }

        public String getCode() {
            return code;
        }

        public void setCode(String value) {
            this.code = value;
        }

        /**
         * Gets a map that contains attributes that aren't bound to any typed property on this class.
         * 
         * <p>
         * the map is keyed by the name of the attribute and 
         * the value is the string value of the attribute.
         * 
         * the map returned by this method is live, and you can add new attribute
         * by updating the map directly. Because of this design, there's no setter.
         * 
         * 
         * @return
         *     always non-null
         */
        public Map<QName, String> getOtherAttributes() {
            return otherAttributes;
        }

    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "content"
    })
    public static class PostBoxNumberPrefixImpl
        implements PostBox.PostBoxNumberPrefix
    {

        @XmlValue
        protected String content;
        @XmlAttribute(name = "NumberPrefixSeparator")
        @XmlSchemaType(name = "anySimpleType")
        protected String numberPrefixSeparator;
        @XmlAttribute(name = "Code")
        @XmlSchemaType(name = "anySimpleType")
        protected String code;
        @XmlAnyAttribute
        private Map<QName, String> otherAttributes = new HashMap<QName, String>();

        public String getContent() {
            return content;
        }

        public void setContent(String value) {
            this.content = value;
        }

        public String getNumberPrefixSeparator() {
            return numberPrefixSeparator;
        }

        public void setNumberPrefixSeparator(String value) {
            this.numberPrefixSeparator = value;
        }

        public String getCode() {
            return code;
        }

        public void setCode(String value) {
            this.code = value;
        }

        /**
         * Gets a map that contains attributes that aren't bound to any typed property on this class.
         * 
         * <p>
         * the map is keyed by the name of the attribute and 
         * the value is the string value of the attribute.
         * 
         * the map returned by this method is live, and you can add new attribute
         * by updating the map directly. Because of this design, there's no setter.
         * 
         * 
         * @return
         *     always non-null
         */
        public Map<QName, String> getOtherAttributes() {
            return otherAttributes;
        }

    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "content"
    })
    public static class PostBoxNumberSuffixImpl
        implements PostBox.PostBoxNumberSuffix
    {

        @XmlValue
        protected String content;
        @XmlAttribute(name = "NumberSuffixSeparator")
        @XmlSchemaType(name = "anySimpleType")
        protected String numberSuffixSeparator;
        @XmlAttribute(name = "Code")
        @XmlSchemaType(name = "anySimpleType")
        protected String code;
        @XmlAnyAttribute
        private Map<QName, String> otherAttributes = new HashMap<QName, String>();

        public String getContent() {
            return content;
        }

        public void setContent(String value) {
            this.content = value;
        }

        public String getNumberSuffixSeparator() {
            return numberSuffixSeparator;
        }

        public void setNumberSuffixSeparator(String value) {
            this.numberSuffixSeparator = value;
        }

        public String getCode() {
            return code;
        }

        public void setCode(String value) {
            this.code = value;
        }

        /**
         * Gets a map that contains attributes that aren't bound to any typed property on this class.
         * 
         * <p>
         * the map is keyed by the name of the attribute and 
         * the value is the string value of the attribute.
         * 
         * the map returned by this method is live, and you can add new attribute
         * by updating the map directly. Because of this design, there's no setter.
         * 
         * 
         * @return
         *     always non-null
         */
        public Map<QName, String> getOtherAttributes() {
            return otherAttributes;
        }

    }

}
