//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.09.22 at 04:04:36 PM CEST 
//


package org.gpx2web.binding.kml.impl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlAnyElement;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;
import org.gpx2web.binding.kml.AddressLine;
import org.gpx2web.binding.kml.BuildingNameType;
import org.gpx2web.binding.kml.FirmType;
import org.gpx2web.binding.kml.MailStopType;
import org.gpx2web.binding.kml.PostalCode;
import org.gpx2web.binding.kml.SubPremiseType;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SubPremiseType", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", propOrder = {
    "addressLines",
    "subPremiseNames",
    "subPremiseNumbers",
    "subPremiseLocation",
    "subPremiseNumberPrefixes",
    "subPremiseNumberSuffixes",
    "buildingNames",
    "firm",
    "mailStop",
    "postalCode",
    "subPremise",
    "anies"
})
public class SubPremiseTypeImpl
    implements SubPremiseType
{

    @XmlElement(name = "AddressLine", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = AddressLineImpl.class)
    protected List<AddressLine> addressLines;
    @XmlElement(name = "SubPremiseName", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = SubPremiseTypeImpl.SubPremiseNameImpl.class)
    protected List<SubPremiseType.SubPremiseName> subPremiseNames;
    @XmlElement(name = "SubPremiseNumber", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = SubPremiseTypeImpl.SubPremiseNumberImpl.class)
    protected List<SubPremiseType.SubPremiseNumber> subPremiseNumbers;
    @XmlElement(name = "SubPremiseLocation", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = SubPremiseTypeImpl.SubPremiseLocationImpl.class)
    protected SubPremiseTypeImpl.SubPremiseLocationImpl subPremiseLocation;
    @XmlElement(name = "SubPremiseNumberPrefix", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = SubPremiseTypeImpl.SubPremiseNumberPrefixImpl.class)
    protected List<SubPremiseType.SubPremiseNumberPrefix> subPremiseNumberPrefixes;
    @XmlElement(name = "SubPremiseNumberSuffix", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = SubPremiseTypeImpl.SubPremiseNumberSuffixImpl.class)
    protected List<SubPremiseType.SubPremiseNumberSuffix> subPremiseNumberSuffixes;
    @XmlElement(name = "BuildingName", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = BuildingNameTypeImpl.class)
    protected List<BuildingNameType> buildingNames;
    @XmlElement(name = "Firm", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = FirmTypeImpl.class)
    protected FirmTypeImpl firm;
    @XmlElement(name = "MailStop", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = MailStopTypeImpl.class)
    protected MailStopTypeImpl mailStop;
    @XmlElement(name = "PostalCode", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = PostalCodeImpl.class)
    protected PostalCodeImpl postalCode;
    @XmlElement(name = "SubPremise", namespace = "urn:oasis:names:tc:ciq:xsdschema:xAL:2.0", type = SubPremiseTypeImpl.class)
    protected SubPremiseTypeImpl subPremise;
    @XmlAnyElement(lax = true)
    protected List<Object> anies;
    @XmlAttribute(name = "Type")
    @XmlSchemaType(name = "anySimpleType")
    protected String type;
    @XmlAnyAttribute
    private Map<QName, String> otherAttributes = new HashMap<QName, String>();

    public List<AddressLine> getAddressLines() {
        if (addressLines == null) {
            addressLines = new ArrayList<AddressLine>();
        }
        return this.addressLines;
    }

    public List<SubPremiseType.SubPremiseName> getSubPremiseNames() {
        if (subPremiseNames == null) {
            subPremiseNames = new ArrayList<SubPremiseType.SubPremiseName>();
        }
        return this.subPremiseNames;
    }

    public List<SubPremiseType.SubPremiseNumber> getSubPremiseNumbers() {
        if (subPremiseNumbers == null) {
            subPremiseNumbers = new ArrayList<SubPremiseType.SubPremiseNumber>();
        }
        return this.subPremiseNumbers;
    }

    public SubPremiseType.SubPremiseLocation getSubPremiseLocation() {
        return subPremiseLocation;
    }

    public void setSubPremiseLocation(SubPremiseType.SubPremiseLocation value) {
        this.subPremiseLocation = ((SubPremiseTypeImpl.SubPremiseLocationImpl) value);
    }

    public List<SubPremiseType.SubPremiseNumberPrefix> getSubPremiseNumberPrefixes() {
        if (subPremiseNumberPrefixes == null) {
            subPremiseNumberPrefixes = new ArrayList<SubPremiseType.SubPremiseNumberPrefix>();
        }
        return this.subPremiseNumberPrefixes;
    }

    public List<SubPremiseType.SubPremiseNumberSuffix> getSubPremiseNumberSuffixes() {
        if (subPremiseNumberSuffixes == null) {
            subPremiseNumberSuffixes = new ArrayList<SubPremiseType.SubPremiseNumberSuffix>();
        }
        return this.subPremiseNumberSuffixes;
    }

    public List<BuildingNameType> getBuildingNames() {
        if (buildingNames == null) {
            buildingNames = new ArrayList<BuildingNameType>();
        }
        return this.buildingNames;
    }

    public FirmType getFirm() {
        return firm;
    }

    public void setFirm(FirmType value) {
        this.firm = ((FirmTypeImpl) value);
    }

    public MailStopType getMailStop() {
        return mailStop;
    }

    public void setMailStop(MailStopType value) {
        this.mailStop = ((MailStopTypeImpl) value);
    }

    public PostalCode getPostalCode() {
        return postalCode;
    }

    public void setPostalCode(PostalCode value) {
        this.postalCode = ((PostalCodeImpl) value);
    }

    public SubPremiseType getSubPremise() {
        return subPremise;
    }

    public void setSubPremise(SubPremiseType value) {
        this.subPremise = ((SubPremiseTypeImpl) value);
    }

    public List<Object> getAnies() {
        if (anies == null) {
            anies = new ArrayList<Object>();
        }
        return this.anies;
    }

    public String getType() {
        return type;
    }

    public void setType(String value) {
        this.type = value;
    }

    /**
     * Gets a map that contains attributes that aren't bound to any typed property on this class.
     * 
     * <p>
     * the map is keyed by the name of the attribute and 
     * the value is the string value of the attribute.
     * 
     * the map returned by this method is live, and you can add new attribute
     * by updating the map directly. Because of this design, there's no setter.
     * 
     * 
     * @return
     *     always non-null
     */
    public Map<QName, String> getOtherAttributes() {
        return otherAttributes;
    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "content"
    })
    public static class SubPremiseLocationImpl
        implements SubPremiseType.SubPremiseLocation
    {

        @XmlValue
        protected String content;
        @XmlAttribute(name = "Code")
        @XmlSchemaType(name = "anySimpleType")
        protected String code;

        public String getContent() {
            return content;
        }

        public void setContent(String value) {
            this.content = value;
        }

        public String getCode() {
            return code;
        }

        public void setCode(String value) {
            this.code = value;
        }

    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "content"
    })
    public static class SubPremiseNameImpl
        implements SubPremiseType.SubPremiseName
    {

        @XmlValue
        protected String content;
        @XmlAttribute(name = "Type")
        @XmlSchemaType(name = "anySimpleType")
        protected String type;
        @XmlAttribute(name = "TypeOccurrence")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String typeOccurrence;
        @XmlAttribute(name = "Code")
        @XmlSchemaType(name = "anySimpleType")
        protected String code;
        @XmlAnyAttribute
        private Map<QName, String> otherAttributes = new HashMap<QName, String>();

        public String getContent() {
            return content;
        }

        public void setContent(String value) {
            this.content = value;
        }

        public String getType() {
            return type;
        }

        public void setType(String value) {
            this.type = value;
        }

        public String getTypeOccurrence() {
            return typeOccurrence;
        }

        public void setTypeOccurrence(String value) {
            this.typeOccurrence = value;
        }

        public String getCode() {
            return code;
        }

        public void setCode(String value) {
            this.code = value;
        }

        /**
         * Gets a map that contains attributes that aren't bound to any typed property on this class.
         * 
         * <p>
         * the map is keyed by the name of the attribute and 
         * the value is the string value of the attribute.
         * 
         * the map returned by this method is live, and you can add new attribute
         * by updating the map directly. Because of this design, there's no setter.
         * 
         * 
         * @return
         *     always non-null
         */
        public Map<QName, String> getOtherAttributes() {
            return otherAttributes;
        }

    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "content"
    })
    public static class SubPremiseNumberImpl
        implements SubPremiseType.SubPremiseNumber
    {

        @XmlValue
        protected String content;
        @XmlAttribute(name = "Indicator")
        @XmlSchemaType(name = "anySimpleType")
        protected String indicator;
        @XmlAttribute(name = "IndicatorOccurrence")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String indicatorOccurrence;
        @XmlAttribute(name = "NumberTypeOccurrence")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String numberTypeOccurrence;
        @XmlAttribute(name = "PremiseNumberSeparator")
        @XmlSchemaType(name = "anySimpleType")
        protected String premiseNumberSeparator;
        @XmlAttribute(name = "Type")
        @XmlSchemaType(name = "anySimpleType")
        protected String type;
        @XmlAttribute(name = "Code")
        @XmlSchemaType(name = "anySimpleType")
        protected String code;
        @XmlAnyAttribute
        private Map<QName, String> otherAttributes = new HashMap<QName, String>();

        public String getContent() {
            return content;
        }

        public void setContent(String value) {
            this.content = value;
        }

        public String getIndicator() {
            return indicator;
        }

        public void setIndicator(String value) {
            this.indicator = value;
        }

        public String getIndicatorOccurrence() {
            return indicatorOccurrence;
        }

        public void setIndicatorOccurrence(String value) {
            this.indicatorOccurrence = value;
        }

        public String getNumberTypeOccurrence() {
            return numberTypeOccurrence;
        }

        public void setNumberTypeOccurrence(String value) {
            this.numberTypeOccurrence = value;
        }

        public String getPremiseNumberSeparator() {
            return premiseNumberSeparator;
        }

        public void setPremiseNumberSeparator(String value) {
            this.premiseNumberSeparator = value;
        }

        public String getType() {
            return type;
        }

        public void setType(String value) {
            this.type = value;
        }

        public String getCode() {
            return code;
        }

        public void setCode(String value) {
            this.code = value;
        }

        /**
         * Gets a map that contains attributes that aren't bound to any typed property on this class.
         * 
         * <p>
         * the map is keyed by the name of the attribute and 
         * the value is the string value of the attribute.
         * 
         * the map returned by this method is live, and you can add new attribute
         * by updating the map directly. Because of this design, there's no setter.
         * 
         * 
         * @return
         *     always non-null
         */
        public Map<QName, String> getOtherAttributes() {
            return otherAttributes;
        }

    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "content"
    })
    public static class SubPremiseNumberPrefixImpl
        implements SubPremiseType.SubPremiseNumberPrefix
    {

        @XmlValue
        protected String content;
        @XmlAttribute(name = "NumberPrefixSeparator")
        @XmlSchemaType(name = "anySimpleType")
        protected String numberPrefixSeparator;
        @XmlAttribute(name = "Type")
        @XmlSchemaType(name = "anySimpleType")
        protected String type;
        @XmlAttribute(name = "Code")
        @XmlSchemaType(name = "anySimpleType")
        protected String code;
        @XmlAnyAttribute
        private Map<QName, String> otherAttributes = new HashMap<QName, String>();

        public String getContent() {
            return content;
        }

        public void setContent(String value) {
            this.content = value;
        }

        public String getNumberPrefixSeparator() {
            return numberPrefixSeparator;
        }

        public void setNumberPrefixSeparator(String value) {
            this.numberPrefixSeparator = value;
        }

        public String getType() {
            return type;
        }

        public void setType(String value) {
            this.type = value;
        }

        public String getCode() {
            return code;
        }

        public void setCode(String value) {
            this.code = value;
        }

        /**
         * Gets a map that contains attributes that aren't bound to any typed property on this class.
         * 
         * <p>
         * the map is keyed by the name of the attribute and 
         * the value is the string value of the attribute.
         * 
         * the map returned by this method is live, and you can add new attribute
         * by updating the map directly. Because of this design, there's no setter.
         * 
         * 
         * @return
         *     always non-null
         */
        public Map<QName, String> getOtherAttributes() {
            return otherAttributes;
        }

    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "content"
    })
    public static class SubPremiseNumberSuffixImpl
        implements SubPremiseType.SubPremiseNumberSuffix
    {

        @XmlValue
        protected String content;
        @XmlAttribute(name = "NumberSuffixSeparator")
        @XmlSchemaType(name = "anySimpleType")
        protected String numberSuffixSeparator;
        @XmlAttribute(name = "Type")
        @XmlSchemaType(name = "anySimpleType")
        protected String type;
        @XmlAttribute(name = "Code")
        @XmlSchemaType(name = "anySimpleType")
        protected String code;
        @XmlAnyAttribute
        private Map<QName, String> otherAttributes = new HashMap<QName, String>();

        public String getContent() {
            return content;
        }

        public void setContent(String value) {
            this.content = value;
        }

        public String getNumberSuffixSeparator() {
            return numberSuffixSeparator;
        }

        public void setNumberSuffixSeparator(String value) {
            this.numberSuffixSeparator = value;
        }

        public String getType() {
            return type;
        }

        public void setType(String value) {
            this.type = value;
        }

        public String getCode() {
            return code;
        }

        public void setCode(String value) {
            this.code = value;
        }

        /**
         * Gets a map that contains attributes that aren't bound to any typed property on this class.
         * 
         * <p>
         * the map is keyed by the name of the attribute and 
         * the value is the string value of the attribute.
         * 
         * the map returned by this method is live, and you can add new attribute
         * by updating the map directly. Because of this design, there's no setter.
         * 
         * 
         * @return
         *     always non-null
         */
        public Map<QName, String> getOtherAttributes() {
            return otherAttributes;
        }

    }

}
